From 0352a8a2d97148df250e17d880a5f0c18477b686 Mon Sep 17 00:00:00 2001
From: Eilo <eilo2518@gmail.com>
Date: Mon, 23 Apr 2012 04:53:53 -0500
Subject: [PATCH 12/19] 0.20 CharacterHistory

---
 .../2012_04_23_100_auth_characterhistory.sql       |   12 +++
 src/server/game/Handlers/CharacterHandler.cpp      |    2 +-
 src/server/game/Scripting/ScriptLoader.cpp         |    2 +
 src/server/game/Scripting/ScriptMgr.cpp            |    4 +-
 src/server/game/Scripting/ScriptMgr.h              |    4 +-
 src/server/scripts/Custom/CMakeLists.txt           |    1 +
 src/server/scripts/Custom/mod_CharacterHistory.cpp |   93 ++++++++++++++++++++
 src/server/worldserver/worldserver.conf.dist       |   45 ++++++++++
 8 files changed, 158 insertions(+), 5 deletions(-)
 create mode 100644 sql/updates/auth/reanemu/2012_04_23_100_auth_characterhistory.sql
 create mode 100644 src/server/scripts/Custom/mod_CharacterHistory.cpp

diff --git a/sql/updates/auth/reanemu/2012_04_23_100_auth_characterhistory.sql b/sql/updates/auth/reanemu/2012_04_23_100_auth_characterhistory.sql
new file mode 100644
index 0000000..4420dd4
--- /dev/null
+++ b/sql/updates/auth/reanemu/2012_04_23_100_auth_characterhistory.sql
@@ -0,0 +1,12 @@
+DROP TABLE IF EXISTS `character_history`;
+CREATE TABLE `character_history` (
+  `HistoryId` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
+  `AccountId` int(10) unsigned NOT NULL DEFAULT '0',
+  `RealmId` int(10) unsigned NOT NULL DEFAULT '0',
+  `SessionIP` varchar(32) NOT NULL,
+  `HistoryType` tinyint(2) unsigned NOT NULL DEFAULT '0',
+  `CharacterGuid` int(10) unsigned NOT NULL DEFAULT '0',
+  `CharacterName` varchar(12) NOT NULL,
+  `HistoryTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
+  PRIMARY KEY (`HistoryId`)
+) ENGINE=MyISAM DEFAULT CHARSET=utf8;
diff --git a/src/server/game/Handlers/CharacterHandler.cpp b/src/server/game/Handlers/CharacterHandler.cpp
index 2d70efd..e8db849 100644
--- a/src/server/game/Handlers/CharacterHandler.cpp
+++ b/src/server/game/Handlers/CharacterHandler.cpp
@@ -721,7 +721,7 @@ void WorldSession::HandleCharDeleteOpcode(WorldPacket & recv_data)
     std::string IP_str = GetRemoteAddress();
     sLog->outDetail("Account: %d (IP: %s) Delete Character:[%s] (GUID: %u)", GetAccountId(), IP_str.c_str(), name.c_str(), GUID_LOPART(guid));
     sLog->outChar("Account: %d (IP: %s) Delete Character:[%s] (GUID: %u)", GetAccountId(), IP_str.c_str(), name.c_str(), GUID_LOPART(guid));
-    sScriptMgr->OnPlayerDelete(guid);
+    sScriptMgr->OnPlayerDelete(guid, name.c_str(), this);
     sWorld->DeleteCharaceterNameData(GUID_LOPART(guid));
 
     if (sLog->IsOutCharDump())                                // optimize GetPlayerDump call
diff --git a/src/server/game/Scripting/ScriptLoader.cpp b/src/server/game/Scripting/ScriptLoader.cpp
index f64d095..d644b4a 100755
--- a/src/server/game/Scripting/ScriptLoader.cpp
+++ b/src/server/game/Scripting/ScriptLoader.cpp
@@ -1226,6 +1226,7 @@ void AddBattlegroundScripts()
 
 #ifdef SCRIPTS
 /* This is where custom scripts' loading functions should be declared. */
+void AddSC_Mod_CharacterHistory();
 
 #endif
 
@@ -1233,6 +1234,7 @@ void AddCustomScripts()
 {
 #ifdef SCRIPTS
     /* This is where custom scripts should be added. */
+    AddSC_Mod_CharacterHistory();
 
 #endif
 }
diff --git a/src/server/game/Scripting/ScriptMgr.cpp b/src/server/game/Scripting/ScriptMgr.cpp
index 01d56cf..a48b21f 100755
--- a/src/server/game/Scripting/ScriptMgr.cpp
+++ b/src/server/game/Scripting/ScriptMgr.cpp
@@ -1293,9 +1293,9 @@ void ScriptMgr::OnPlayerCreate(Player* player)
     FOREACH_SCRIPT(PlayerScript)->OnCreate(player);
 }
 
-void ScriptMgr::OnPlayerDelete(uint64 guid)
+void ScriptMgr::OnPlayerDelete(uint64 guid, const char* name, WorldSession* session)
 {
-    FOREACH_SCRIPT(PlayerScript)->OnDelete(guid);
+    FOREACH_SCRIPT(PlayerScript)->OnDelete(guid, name, session);
 }
 
 void ScriptMgr::OnPlayerBindToInstance(Player* player, Difficulty difficulty, uint32 mapid, bool permanent)
diff --git a/src/server/game/Scripting/ScriptMgr.h b/src/server/game/Scripting/ScriptMgr.h
index 6fe058d..f00657b 100755
--- a/src/server/game/Scripting/ScriptMgr.h
+++ b/src/server/game/Scripting/ScriptMgr.h
@@ -724,7 +724,7 @@ class PlayerScript : public ScriptObject
         virtual void OnCreate(Player* /*player*/) { }
 
         // Called when a player is deleted.
-        virtual void OnDelete(uint64 /*guid*/) { }
+        virtual void OnDelete(uint64 /*guid*/, const char* /*name*/, WorldSession* /*session*/) { }
 
         // Called when a player is bound to an instance
         virtual void OnBindToInstance(Player* /*player*/, Difficulty /*difficulty*/, uint32 /*mapId*/, bool /*permanent*/) { }
@@ -999,7 +999,7 @@ class ScriptMgr
         void OnPlayerLogin(Player* player);
         void OnPlayerLogout(Player* player);
         void OnPlayerCreate(Player* player);
-        void OnPlayerDelete(uint64 guid);
+        void OnPlayerDelete(uint64 guid, const char* name, WorldSession* session);
         void OnPlayerBindToInstance(Player* player, Difficulty difficulty, uint32 mapid, bool permanent);
         void OnPlayerUpdateZone(Player* player, uint32 newZone, uint32 newArea);
 
diff --git a/src/server/scripts/Custom/CMakeLists.txt b/src/server/scripts/Custom/CMakeLists.txt
index 62abde2..e9b7fa9 100644
--- a/src/server/scripts/Custom/CMakeLists.txt
+++ b/src/server/scripts/Custom/CMakeLists.txt
@@ -10,6 +10,7 @@
 
 set(scripts_STAT_SRCS
   ${scripts_STAT_SRCS}
+  Custom/mod_CharacterHistory.cpp
 )
 
 message("  -> Prepared: Custom")
diff --git a/src/server/scripts/Custom/mod_CharacterHistory.cpp b/src/server/scripts/Custom/mod_CharacterHistory.cpp
new file mode 100644
index 0000000..49cc1b5
--- /dev/null
+++ b/src/server/scripts/Custom/mod_CharacterHistory.cpp
@@ -0,0 +1,93 @@
+#include "ScriptPCH.h"
+#include "Config.h"
+
+#define SQL_HISTORY "INSERT INTO `character_history` (`AccountId`, `RealmId`, `SessionIP`, `HistoryType`, `CharacterGuid`, `CharacterName`) VALUES ('%d', '%u', '%s', '%u', '%u', '%s')"
+
+enum CharacterHistoryType
+{
+    CHARACTER_HISTORY_UNKNOWN = 0,
+    CHARACTER_HISTORY_LOGIN   = 1,
+    CHARACTER_HISTORY_LOGOUT  = 2,
+    CHARACTER_HISTORY_DELETE  = 3,
+    CHARACTER_HISTORY_CREATE  = 4
+};
+
+bool CharacterHistoryEnable   = false;
+bool CharacterHistoryLogin    = false;
+bool CharacterHistoryLogout   = false;
+bool CharacterHistoryCreate   = false;
+bool CharacterHistoryDelete   = false;
+
+void WriteToHistory(Player* player, uint8 historyType)
+{
+    WorldSession* session = player->GetSession();
+    LoginDatabase.PExecute(SQL_HISTORY, session->GetAccountId(), realmID, session->GetRemoteAddress().c_str(), historyType, player->GetGUIDLow(), player->GetName());
+}
+
+class mod_CharacterHistory_WorldScript : public WorldScript
+{
+    public:
+        mod_CharacterHistory_WorldScript() : WorldScript("mod_CharacterHistory_WorldScript") { }
+
+    // Called after the world configuration is (re)loaded.
+    void OnConfigLoad(bool /*reload*/)
+    {
+        CharacterHistoryEnable    = ConfigMgr::GetBoolDefault("CharacterHistory.Enable", false);
+
+        if (!CharacterHistoryEnable)
+            return;
+
+        CharacterHistoryLogin     = ConfigMgr::GetBoolDefault("CharacterHistory.Login", false);
+        CharacterHistoryLogout    = ConfigMgr::GetBoolDefault("CharacterHistory.Logout", false);
+        CharacterHistoryCreate    = ConfigMgr::GetBoolDefault("CharacterHistory.Create", false);
+        CharacterHistoryDelete    = ConfigMgr::GetBoolDefault("CharacterHistory.Delete", false);
+    }
+};
+
+class mod_CharacterHistory_PlayerScript : public PlayerScript
+{
+    public:
+        mod_CharacterHistory_PlayerScript() : PlayerScript("mod_CharacterHistory_PlayerScript") { }
+
+    // Called when a player is created.
+    void OnCreate(Player* player)
+    {
+        if (!CharacterHistoryEnable || !CharacterHistoryCreate)
+            return;
+
+        WriteToHistory(player, CHARACTER_HISTORY_CREATE);
+    }
+
+    // Called when a player logs in.
+    void OnLogin(Player* player)
+    {
+        if (!CharacterHistoryEnable || !CharacterHistoryLogin)
+            return;
+
+        WriteToHistory(player, CHARACTER_HISTORY_LOGIN);
+    }
+
+    // Called when a player logs out.
+    void OnLogout(Player* player)
+    {
+        if (!CharacterHistoryEnable || !CharacterHistoryLogout)
+            return;
+
+        WriteToHistory(player, CHARACTER_HISTORY_LOGOUT);
+    }
+
+    // Called when a player is deleted.
+    void OnDelete(uint64 guid, const char* name, WorldSession* session)
+    {
+        if (!CharacterHistoryEnable || !CharacterHistoryDelete)
+            return;
+
+        LoginDatabase.PExecute(SQL_HISTORY, session->GetAccountId(), realmID, session->GetRemoteAddress().c_str(), CHARACTER_HISTORY_DELETE, GUID_LOPART(guid), name);
+    }
+};
+
+void AddSC_Mod_CharacterHistory()
+{
+    new mod_CharacterHistory_WorldScript();
+    new mod_CharacterHistory_PlayerScript();
+}
\ No newline at end of file
diff --git a/src/server/worldserver/worldserver.conf.dist b/src/server/worldserver/worldserver.conf.dist
index 7d88e8a..b566baf 100644
--- a/src/server/worldserver/worldserver.conf.dist
+++ b/src/server/worldserver/worldserver.conf.dist
@@ -3187,3 +3187,48 @@ PlayerDump.DisallowOverwrite = 1
 
 #
 ###################################################################################################
+
+###################################################################################################
+# CHARACTER HISTORY
+#
+#    CharacterHistory.Enable
+#        Description: Logging history (create / delete / login / logout) characters to database
+#        Default:     0 = Disable
+#                     1 = Enable
+
+CharacterHistory.Enable = 0
+
+#
+#     CharacterHistory.Login
+#        Description: Enables logging login characters
+#        Default:     0 - (Disabled)
+#                     1 - (Enabled)
+
+CharacterHistory.Login = 0
+
+#
+#     CharacterHistory.Logout
+#        Description: Enables logging logout characters
+#        Default:     0 - (Disabled)
+#                     1 - (Enabled)
+
+CharacterHistory.Logout = 0
+
+#
+#     CharacterHistory.Create
+#        Description: Enables logging create characters
+#        Default:     0 - (Disabled)
+#                     1 - (Enabled)
+
+CharacterHistory.Create = 0
+
+#
+#     CharacterHistory.Delete
+#        Description: Enables logging delete characters
+#        Default:     0 - (Disabled)
+#                     1 - (Enabled)
+
+CharacterHistory.Delete = 0
+
+#
+###################################################################################################
-- 
1.7.8.msysgit.0

