From 7e2e7d623ea5c61c51d76f316f9154bf7bc6b8b7 Mon Sep 17 00:00:00 2001
From: Hispano <jesus.diaz.gutierrez@gmail.com>
Date: Sat, 26 Nov 2011 17:44:14 +0100
Subject: [PATCH 03/24] 3.3 Brujo: Pet Felhunter mejoras en spells

---
 .../2011_11_05_100_world_felhunter_mejorado.sql    |    2 +
 src/server/scripts/Spells/spell_warlock.cpp        |  189 ++++++++++++++------
 2 files changed, 139 insertions(+), 52 deletions(-)
 create mode 100644 sql/updates/world/reanemu/2011_11_05_100_world_felhunter_mejorado.sql

diff --git a/sql/updates/world/reanemu/2011_11_05_100_world_felhunter_mejorado.sql b/sql/updates/world/reanemu/2011_11_05_100_world_felhunter_mejorado.sql
new file mode 100644
index 0000000..fdde9c6
--- /dev/null
+++ b/sql/updates/world/reanemu/2011_11_05_100_world_felhunter_mejorado.sql
@@ -0,0 +1,2 @@
+DELETE FROM spell_script_names WHERE spell_id IN (-54049,54049,54050,54051,54052,54053);
+INSERT INTO spell_script_names (spell_id, ScriptName) VALUES (-54049, 'spell_warl_shadow_bite');
\ No newline at end of file
diff --git a/src/server/scripts/Spells/spell_warlock.cpp b/src/server/scripts/Spells/spell_warlock.cpp
index 24e76de..826eb70 100644
--- a/src/server/scripts/Spells/spell_warlock.cpp
+++ b/src/server/scripts/Spells/spell_warlock.cpp
@@ -34,57 +34,14 @@ enum WarlockSpells
     WARLOCK_DEMONIC_EMPOWERMENT_IMP         = 54444,
     WARLOCK_IMPROVED_HEALTHSTONE_R1         = 18692,
     WARLOCK_IMPROVED_HEALTHSTONE_R2         = 18693,
-};
-
-class spell_warl_banish : public SpellScriptLoader
-{
-public:
-    spell_warl_banish() : SpellScriptLoader("spell_warl_banish") { }
-
-    class spell_warl_banish_SpellScript : public SpellScript
-    {
-        PrepareSpellScript(spell_warl_banish_SpellScript);
-
-        bool Load()
-        {
-            _removed = false;
-            return true;
-        }
-
-        void HandleBanish()
-        {
-            if (Unit* target = GetHitUnit())
-            {
-                if (target->GetAuraEffect(SPELL_AURA_SCHOOL_IMMUNITY, SPELLFAMILY_WARLOCK, 0, 0x08000000, 0))
-                {
-                    //No need to remove old aura since its removed due to not stack by current Banish aura
-                    PreventHitDefaultEffect(EFFECT_0);
-                    PreventHitDefaultEffect(EFFECT_1);
-                    PreventHitDefaultEffect(EFFECT_2);
-                    _removed = true;
-                }
-            }
-        }
-
-        void RemoveAura()
-        {
-            if (_removed)
-                PreventHitAura();
-        }
-
-        void Register()
-        {
-            BeforeHit += SpellHitFn(spell_warl_banish_SpellScript::HandleBanish);
-            AfterHit += SpellHitFn(spell_warl_banish_SpellScript::RemoveAura);
-        }
-
-        bool _removed;
-    };
-
-    SpellScript* GetSpellScript() const
-    {
-        return new spell_warl_banish_SpellScript();
-    }
+	WARLOCK_FELHUNTER_SHADOWBITE_R1         = 54049,
+	WARLOCK_FELHUNTER_SHADOWBITE_R2         = 54050,
+	WARLOCK_FELHUNTER_SHADOWBITE_R3         = 54051,
+	WARLOCK_FELHUNTER_SHADOWBITE_R4         = 54052,
+	WARLOCK_FELHUNTER_SHADOWBITE_R5         = 54053,
+	WARLOCK_IMPROVED_FELHUNTER_R1           = 54037,
+	WARLOCK_IMPROVED_FELHUNTER_R2           = 54038,
+	WARLOCK_IMPROVED_FELHUNTER_EFFECT       = 54425,
 };
 
 // 47193 Demonic Empowerment
@@ -308,6 +265,133 @@ class spell_warl_seed_of_corruption : public SpellScriptLoader
         }
 };
 
+// Shadow Bite
+class spell_warl_shadow_bite : public SpellScriptLoader
+{
+public:
+    spell_warl_shadow_bite() : SpellScriptLoader("spell_warl_shadow_bite") { }
+
+    class spell_warl_shadow_bite_SpellScript : public SpellScript
+    {
+        PrepareSpellScript(spell_warl_shadow_bite_SpellScript)
+        bool Validate(SpellInfo const * /*spellEntry*/)
+        {
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_FELHUNTER_SHADOWBITE_R1))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_FELHUNTER_SHADOWBITE_R2))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_FELHUNTER_SHADOWBITE_R3))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_FELHUNTER_SHADOWBITE_R4))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_FELHUNTER_SHADOWBITE_R5))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_IMPROVED_FELHUNTER_R1))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_IMPROVED_FELHUNTER_R2))
+                return false;
+            if (!sSpellMgr->GetSpellInfo(WARLOCK_IMPROVED_FELHUNTER_EFFECT))
+                return false;
+            return true;
+        }
+
+        void HandleScriptEffect(SpellEffIndex /*effIndex*/)
+        {
+            //Unit *caster = GetCaster();
+            // Get DoTs on target by owner (15% increase by dot)
+            // need to get this here from SpellEffects.cpp ?
+            // damage *= float(100.f  15.f * caster->getVictim()->GetDoTsByCaster(caster->GetOwnerGUID())) / 100.f;
+        }
+
+        // For Improved Felhunter
+        void HandleAfterHitEffect()
+        {
+            Unit *caster = GetCaster();
+            if(!caster) { return; };
+
+            // break if our caster is not a pet
+            if(!(caster->GetTypeId() == TYPEID_UNIT && caster->ToCreature()->isPet())) { return; };
+
+            // break if pet has no owner and/or owner is not a player
+            Unit *owner = caster->GetOwner();
+            if(!(owner && (owner->GetTypeId() == TYPEID_PLAYER))) { return; };
+            
+            int32 amount;
+            // rank 1 - 4%
+            if(owner->HasAura(WARLOCK_IMPROVED_FELHUNTER_R1)) { amount = 5; };
+
+            // rank 2 - 8%
+            if(owner->HasAura(WARLOCK_IMPROVED_FELHUNTER_R2)) { amount = 9; };
+            
+            // Finally return the Mana to our Caster
+            if(AuraEffect * aurEff = owner->GetAuraEffect(SPELL_AURA_ADD_FLAT_MODIFIER, SPELLFAMILY_WARLOCK, 214, 0))
+                caster->CastCustomSpell(caster,WARLOCK_IMPROVED_FELHUNTER_EFFECT,&amount,NULL,NULL,true,NULL,aurEff,caster->GetGUID());
+        }
+
+        void Register()
+        {
+            //OnEffectHitTarget = SpellEffectFn(spell_warl_shadow_bite_SpellScript::HandleScriptEffect, EFFECT_0, SPELL_EFFECT_SCRIPT_EFFECT);
+            AfterHit += SpellHitFn(spell_warl_shadow_bite_SpellScript::HandleAfterHitEffect);
+        }
+    };
+
+    SpellScript* GetSpellScript() const
+    {
+        return new spell_warl_shadow_bite_SpellScript();
+    }
+};
+
+class spell_warl_banish : public SpellScriptLoader
+{
+    public:
+        spell_warl_banish() : SpellScriptLoader("spell_warl_banish") { }
+
+        class spell_warl_banish_SpellScript : public SpellScript
+        {
+            PrepareSpellScript(spell_warl_banish_SpellScript);
+
+            bool Load()
+            {
+                _removed = false;
+                return true;
+            }
+
+            void HandleBanish()
+            {
+                if (Unit* target = GetHitUnit())
+                {
+                    if (target->GetAuraEffect(SPELL_AURA_SCHOOL_IMMUNITY, SPELLFAMILY_WARLOCK, 0, 0x08000000, 0))
+                    {
+                        //No need to remove old aura since its removed due to not stack by current Banish aura
+                        PreventHitDefaultEffect(EFFECT_0);
+                        PreventHitDefaultEffect(EFFECT_1);
+                        PreventHitDefaultEffect(EFFECT_2);
+                        _removed = true;
+                    }
+                }
+            }
+
+            void RemoveAura()
+            {
+                if (_removed)
+                    PreventHitAura();
+            }
+
+            void Register()
+            {
+                BeforeHit += SpellHitFn(spell_warl_banish_SpellScript::HandleBanish);
+                AfterHit += SpellHitFn(spell_warl_banish_SpellScript::RemoveAura);
+            }
+
+            bool _removed;
+        };
+
+        SpellScript* GetSpellScript() const
+        {
+            return new spell_warl_banish_SpellScript();
+        }
+};
+
 class spell_warl_demonic_circle_summon : public SpellScriptLoader
 {
 public:
@@ -354,11 +438,12 @@ public:
 
 void AddSC_warlock_spell_scripts()
 {
-    new spell_warl_banish();
     new spell_warl_demonic_empowerment();
     new spell_warl_create_healthstone();
     new spell_warl_everlasting_affliction();
     new spell_warl_ritual_of_doom_effect();
     new spell_warl_seed_of_corruption();
+    new spell_warl_shadow_bite();
+    new spell_warl_banish();
     new spell_warl_demonic_circle_summon();
 }
-- 
1.7.8.msysgit.0

